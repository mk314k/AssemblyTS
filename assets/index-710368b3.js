var d=Object.defineProperty;var u=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var l=(s,e,t)=>(u(s,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();class a extends Error{constructor(){super("Invalid register index"),this.name="RegisterIndexError"}}function x(s){return/^x([0-9]|[1-2]\d|3[0-1])$/.test(s)}const o={zero:"x0",ra:"x1",sp:"x2",gp:"x3",tp:"x4",t0:"x5",t1:"x6",t2:"x7",s0:"x8",s1:"x9",a0:"x10",a1:"x11",a2:"x12",a3:"x13",a4:"x14",a5:"x15",a6:"x16",a7:"x17",s2:"x18",s3:"x19",s4:"x20",s5:"x21",s6:"x22",s7:"x23",s8:"x24",s9:"x25",s10:"x26",s11:"x27",t3:"x28",t4:"x29",t5:"x30",t6:"x31"};class f{constructor(e){l(this,"index");if(Number.isInteger(e)&&e>=0&&e<32)this.index=e;else throw new a}}class g{constructor(e){l(this,"registers");this.regElement=e,this.registers=new Array(32).fill(0)}regToIndex(e){if(e instanceof f)return e.index;if(x(e))return parseInt(e.slice(1));if(e in o)return parseInt(o[e].slice(1));throw new a}getValue(e){const t=this.regToIndex(e);return this.registers[t]}setValue(e,t){const n=this.regToIndex(e);this.registers[n]=t}outHTML(){let e="";for(const t in o){let n=this.registers[this.regToIndex(t)].toString();n.length<8&&(n="0".repeat(8-n.length)+n),e+=`
            <div class="register flex-vertical">
              <span>${t}</span>
              <span>0d${n}</span>
              <span>${o[t]}</span>
            </div>
          `}this.regElement.innerHTML=e}}function m(){const s=document.getElementById("registers"),e=document.getElementById("instruction-memory"),t=document.getElementById("data-memory");s!==null&&e!==null&&t&&new g(s).outHTML()}document.addEventListener("DOMContentLoaded",m);
